{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saikat Mohanta\\\\Desktop\\\\Web development\\\\React projects\\\\Sorting Visualizer\\\\sortingvisualizer\\\\src\\\\SortingVisualizer.jsx\";\nimport React from \"react\";\nimport './visualizer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      arr: []\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 0; i < 80; i++) {\n      array.push(randomIntegers(10, 600));\n    }\n\n    this.setState({\n      arr: array\n    });\n  }\n\n  MergeSort() {\n    const e1 = document.getElementById(1);\n    const e2 = document.getElementById(4); //  let col =red;\n\n    console.log(e1);\n    console.log(e2);\n    setTimeout(() => {\n      e1.style.backgroundColor = \"red\";\n      e2.style.backgroundColor = \"red\";\n      let temp = e1.style.height;\n      e1.style.height = e2.style.height;\n      e2.style.height = temp;\n    }, 300);\n    setTimeout(() => {\n      e1.style.backgroundColor = \"rgb(177, 177, 248)\";\n      e2.style.backgroundColor = \"rgb(177, 177, 248)\";\n    }, 1200);\n  }\n\n  BubbbleSort() {\n    const {\n      arr\n    } = this.state;\n\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = i + 1; j < arr.length; j++) {\n        if (arr[i + 1] < arr[i]) {\n          let temp = arr[i + 1];\n          arr[i + 1] = arr[i];\n          arr[i] = temp;\n        }\n      }\n    }\n\n    console.log(arr);\n  }\n\n  render() {\n    const {\n      arr\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => {\n          this.resetArray();\n        },\n        children: \"Generate New Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => {\n          this.MergeSort();\n        },\n        children: \"MergeSort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => {\n          this.BubbbleSort();\n        },\n        children: \"BubbbleSort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"array\",\n        children: arr.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          id: index,\n          style: {\n            listStyle: \"none\",\n            height: `${value}px`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nfunction randomIntegers(min, max) {\n  // min and max included \n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport default SortingVisualizer;","map":{"version":3,"names":["React","SortingVisualizer","Component","constructor","props","state","arr","componentDidMount","resetArray","array","i","push","randomIntegers","setState","MergeSort","e1","document","getElementById","e2","console","log","setTimeout","style","backgroundColor","temp","height","BubbbleSort","length","j","render","map","value","index","listStyle","min","max","Math","floor","random"],"sources":["C:/Users/Saikat Mohanta/Desktop/Web development/React projects/Sorting Visualizer/sortingvisualizer/src/SortingVisualizer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport './visualizer.css';\r\nclass SortingVisualizer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arr: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.resetArray();\r\n    }\r\n    resetArray() {\r\n        const array = [];\r\n        for (let i = 0; i < 80; i++) {\r\n            array.push(randomIntegers(10, 600));\r\n        }\r\n        this.setState({ arr: array });\r\n    }\r\n    MergeSort() {\r\n        const e1 = document.getElementById(1);\r\n        const e2 = document.getElementById(4);\r\n        //  let col =red;\r\n        console.log(e1);\r\n        console.log(e2);\r\n      setTimeout(() => {\r\n            e1.style.backgroundColor = \"red\";\r\n            e2.style.backgroundColor = \"red\";\r\n            let temp = e1.style.height;\r\n            e1.style.height = e2.style.height;\r\n            e2.style.height = temp;\r\n        }, 300);\r\n       \r\n        setTimeout(() => {\r\n            e1.style.backgroundColor = \"rgb(177, 177, 248)\";\r\n            e2.style.backgroundColor = \"rgb(177, 177, 248)\";\r\n        }, 1200);\r\n\r\n\r\n    }\r\n    BubbbleSort() {\r\n        const { arr } = this.state;\r\n        for (let i = 0; i < arr.length; i++) {\r\n            for (let j = i + 1; j < arr.length; j++)\r\n            {\r\n                if (arr[i + 1] < arr[i]) {\r\n                    let temp = arr[i + 1];\r\n                    arr[i + 1] = arr[i];\r\n                    arr[i] = temp;\r\n                }\r\n            }\r\n\r\n        }\r\n        console.log(arr);\r\n    }\r\n    render() {\r\n        const { arr } = this.state;\r\n        return (\r\n            <>\r\n                <button className=\"btn\" onClick={() => {\r\n                    this.resetArray();\r\n                }}>Generate New Array</button>\r\n                <button className=\"btn\" onClick={() => {\r\n                    this.MergeSort();\r\n                }}>MergeSort</button>\r\n                <button className=\"btn\" onClick={() => {\r\n                    this.BubbbleSort();\r\n                }}>BubbbleSort</button>\r\n                <div className=\"array\">\r\n                    {arr.map((value, index) => (\r\n                        <li id={index} style={{ listStyle: \"none\", height: `${value}px` }}></li>\r\n\r\n                    ))}\r\n                </div>\r\n\r\n\r\n            </>\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\nfunction randomIntegers(min, max) {\r\n    // min and max included \r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\nexport default SortingVisualizer;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;;;;AACA,MAAMC,iBAAN,SAAgCD,KAAK,CAACE,SAAtC,CAAgD;EAC5CC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACTC,GAAG,EAAE;IADI,CAAb;EAGH;;EACDC,iBAAiB,GAAG;IAChB,KAAKC,UAAL;EACH;;EACDA,UAAU,GAAG;IACT,MAAMC,KAAK,GAAG,EAAd;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;MACzBD,KAAK,CAACE,IAAN,CAAWC,cAAc,CAAC,EAAD,EAAK,GAAL,CAAzB;IACH;;IACD,KAAKC,QAAL,CAAc;MAAEP,GAAG,EAAEG;IAAP,CAAd;EACH;;EACDK,SAAS,GAAG;IACR,MAAMC,EAAE,GAAGC,QAAQ,CAACC,cAAT,CAAwB,CAAxB,CAAX;IACA,MAAMC,EAAE,GAAGF,QAAQ,CAACC,cAAT,CAAwB,CAAxB,CAAX,CAFQ,CAGR;;IACAE,OAAO,CAACC,GAAR,CAAYL,EAAZ;IACAI,OAAO,CAACC,GAAR,CAAYF,EAAZ;IACFG,UAAU,CAAC,MAAM;MACXN,EAAE,CAACO,KAAH,CAASC,eAAT,GAA2B,KAA3B;MACAL,EAAE,CAACI,KAAH,CAASC,eAAT,GAA2B,KAA3B;MACA,IAAIC,IAAI,GAAGT,EAAE,CAACO,KAAH,CAASG,MAApB;MACAV,EAAE,CAACO,KAAH,CAASG,MAAT,GAAkBP,EAAE,CAACI,KAAH,CAASG,MAA3B;MACAP,EAAE,CAACI,KAAH,CAASG,MAAT,GAAkBD,IAAlB;IACH,CANO,EAML,GANK,CAAV;IAQEH,UAAU,CAAC,MAAM;MACbN,EAAE,CAACO,KAAH,CAASC,eAAT,GAA2B,oBAA3B;MACAL,EAAE,CAACI,KAAH,CAASC,eAAT,GAA2B,oBAA3B;IACH,CAHS,EAGP,IAHO,CAAV;EAMH;;EACDG,WAAW,GAAG;IACV,MAAM;MAAEpB;IAAF,IAAU,KAAKD,KAArB;;IACA,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,GAAG,CAACqB,MAAxB,EAAgCjB,CAAC,EAAjC,EAAqC;MACjC,KAAK,IAAIkB,CAAC,GAAGlB,CAAC,GAAG,CAAjB,EAAoBkB,CAAC,GAAGtB,GAAG,CAACqB,MAA5B,EAAoCC,CAAC,EAArC,EACA;QACI,IAAItB,GAAG,CAACI,CAAC,GAAG,CAAL,CAAH,GAAaJ,GAAG,CAACI,CAAD,CAApB,EAAyB;UACrB,IAAIc,IAAI,GAAGlB,GAAG,CAACI,CAAC,GAAG,CAAL,CAAd;UACAJ,GAAG,CAACI,CAAC,GAAG,CAAL,CAAH,GAAaJ,GAAG,CAACI,CAAD,CAAhB;UACAJ,GAAG,CAACI,CAAD,CAAH,GAASc,IAAT;QACH;MACJ;IAEJ;;IACDL,OAAO,CAACC,GAAR,CAAYd,GAAZ;EACH;;EACDuB,MAAM,GAAG;IACL,MAAM;MAAEvB;IAAF,IAAU,KAAKD,KAArB;IACA,oBACI;MAAA,wBACI;QAAQ,SAAS,EAAC,KAAlB;QAAwB,OAAO,EAAE,MAAM;UACnC,KAAKG,UAAL;QACH,CAFD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAII;QAAQ,SAAS,EAAC,KAAlB;QAAwB,OAAO,EAAE,MAAM;UACnC,KAAKM,SAAL;QACH,CAFD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ,eAOI;QAAQ,SAAS,EAAC,KAAlB;QAAwB,OAAO,EAAE,MAAM;UACnC,KAAKY,WAAL;QACH,CAFD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPJ,eAUI;QAAK,SAAS,EAAC,OAAf;QAAA,UACKpB,GAAG,CAACwB,GAAJ,CAAQ,CAACC,KAAD,EAAQC,KAAR,kBACL;UAAI,EAAE,EAAEA,KAAR;UAAe,KAAK,EAAE;YAAEC,SAAS,EAAE,MAAb;YAAqBR,MAAM,EAAG,GAAEM,KAAM;UAAtC;QAAtB;UAAA;UAAA;UAAA;QAAA,QADH;MADL;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA,gBADJ;EAsBH;;AA7E2C;;AAiFhD,SAASnB,cAAT,CAAwBsB,GAAxB,EAA6BC,GAA7B,EAAkC;EAC9B;EACA,OAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;AACH;;AACD,eAAejC,iBAAf"},"metadata":{},"sourceType":"module"}