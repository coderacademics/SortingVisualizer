{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saikat Mohanta\\\\Desktop\\\\Web development\\\\React projects\\\\Sorting Visualizer\\\\sortingvisualizer\\\\src\\\\SortingVisualizer.jsx\";\nimport React from \"react\";\nimport './visualizer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      arr: []\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 0; i < 80; i++) {\n      array.push(randomIntegers(10, 600));\n    }\n\n    this.setState({\n      arr: array\n    });\n  }\n\n  delay(i) {\n    setTimeout(() => {\n      console.log(\"Entered delay\");\n    }, 300 * i);\n  }\n\n  MergeSort() {\n    const e1 = document.getElementById(1);\n    const e2 = document.getElementById(4); //  let col =red;\n\n    console.log(e1);\n    console.log(e2);\n    setTimeout(() => {\n      e1.style.backgroundColor = \"red\";\n      e2.style.backgroundColor = \"red\";\n      let temp = e1.style.height;\n      e1.style.height = e2.style.height;\n      e2.style.height = temp;\n    }, 300);\n    setTimeout(() => {\n      e1.style.backgroundColor = \"rgb(177, 177, 248)\";\n      e2.style.backgroundColor = \"rgb(177, 177, 248)\";\n    }, 1200);\n  }\n\n  BubbbleSort() {\n    const {\n      arr\n    } = this.state;\n    let Change = false;\n    let tempid, tempheight;\n\n    for (let i = 0; i < arr.length; i++) {\n      setTimeout(() => {\n        for (let j = 0; j < arr.length - 1 - i; j++) {\n          if (arr[j + 1] < arr[j]) {\n            let temp = arr[j + 1];\n            arr[j + 1] = arr[j];\n            arr[j] = temp;\n            Change = true;\n          } else {\n            Change = false;\n          }\n\n          let e1 = document.getElementById(j).style;\n          let e2 = document.getElementById(j + 1).style;\n          console.log(\"entered timeout.\");\n          e1.backgroundColor = \"red\";\n          e2.backgroundColor = \"red\";\n\n          if (Change) {\n            tempheight = e1.height;\n            e1.height = e2.height;\n            e2.height = tempheight;\n          }\n\n          e1.backgroundColor = `rgb(177, 177, 248)`;\n          e2.backgroundColor = `rgb(177, 177, 248)`;\n        }\n      }, 100 * j);\n    } // this.setState=({arr:arr});\n\n  }\n\n  render() {\n    const {\n      arr\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => {\n          this.resetArray();\n        },\n        children: \"Generate New Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => {\n          this.MergeSort();\n        },\n        children: \"MergeSort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => {\n          this.BubbbleSort();\n        },\n        children: \"BubbbleSort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"array\",\n        children: arr.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          id: index,\n          style: {\n            listStyle: \"none\",\n            height: `${value}px`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nfunction randomIntegers(min, max) {\n  // min and max included \n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport default SortingVisualizer;","map":{"version":3,"names":["React","SortingVisualizer","Component","constructor","props","state","arr","componentDidMount","resetArray","array","i","push","randomIntegers","setState","delay","setTimeout","console","log","MergeSort","e1","document","getElementById","e2","style","backgroundColor","temp","height","BubbbleSort","Change","tempid","tempheight","length","j","render","map","value","index","listStyle","min","max","Math","floor","random"],"sources":["C:/Users/Saikat Mohanta/Desktop/Web development/React projects/Sorting Visualizer/sortingvisualizer/src/SortingVisualizer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport './visualizer.css';\r\nclass SortingVisualizer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arr: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.resetArray();\r\n    }\r\n    resetArray() {\r\n        const array = [];\r\n        for (let i = 0; i < 80; i++) {\r\n            array.push(randomIntegers(10, 600));\r\n        }\r\n        this.setState({ arr: array });\r\n    }\r\n    delay(i) {\r\n        setTimeout(() => {\r\n            console.log(\"Entered delay\");\r\n        }, 300 * i);\r\n    }\r\n    MergeSort() {\r\n        const e1 = document.getElementById(1);\r\n        const e2 = document.getElementById(4);\r\n        //  let col =red;\r\n        console.log(e1);\r\n        console.log(e2);\r\n        setTimeout(() => {\r\n            e1.style.backgroundColor = \"red\";\r\n            e2.style.backgroundColor = \"red\";\r\n            let temp = e1.style.height;\r\n            e1.style.height = e2.style.height;\r\n            e2.style.height = temp;\r\n        }, 300);\r\n\r\n        setTimeout(() => {\r\n            e1.style.backgroundColor = \"rgb(177, 177, 248)\";\r\n            e2.style.backgroundColor = \"rgb(177, 177, 248)\";\r\n        }, 1200);\r\n\r\n\r\n    }\r\n    BubbbleSort() {\r\n        const { arr } = this.state;\r\n        let Change = false;\r\n        let tempid, tempheight;\r\n        for (let i = 0; i < arr.length; i++) {\r\n            setTimeout(() => {\r\n                for (let j = 0; j < arr.length - 1 - i; j++) {\r\n                    if (arr[j + 1] < arr[j]) {\r\n                        let temp = arr[j + 1];\r\n                        arr[j + 1] = arr[j];\r\n                        arr[j] = temp;\r\n                        Change = true;\r\n                    }\r\n                    else {\r\n                        Change = false;\r\n                    }\r\n                    let e1 = document.getElementById(j).style;\r\n                    let e2 = document.getElementById(j + 1).style;\r\n\r\n                    console.log(\"entered timeout.\");\r\n                    e1.backgroundColor = \"red\";\r\n                    e2.backgroundColor = \"red\";\r\n                    if (Change) {\r\n                        tempheight = e1.height;\r\n                        e1.height = e2.height;\r\n                        e2.height = tempheight;\r\n                    }\r\n                    e1.backgroundColor = `rgb(177, 177, 248)`;\r\n                    e2.backgroundColor = `rgb(177, 177, 248)`;\r\n\r\n\r\n                }\r\n            }, 100 * j);\r\n        }\r\n\r\n        // this.setState=({arr:arr});\r\n    }\r\n    render() {\r\n        const { arr } = this.state;\r\n        return (\r\n            <>\r\n                <button className=\"btn\" onClick={() => {\r\n                    this.resetArray();\r\n                }}>Generate New Array</button>\r\n                <button className=\"btn\" onClick={() => {\r\n                    this.MergeSort();\r\n                }}>MergeSort</button>\r\n                <button className=\"btn\" onClick={() => {\r\n                    this.BubbbleSort();\r\n                }}>BubbbleSort</button>\r\n                <div className=\"array\">\r\n                    {arr.map((value, index) => (\r\n                        <li id={index} style={{ listStyle: \"none\", height: `${value}px` }}></li>\r\n\r\n                    ))}\r\n                </div>\r\n\r\n\r\n            </>\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\nfunction randomIntegers(min, max) {\r\n    // min and max included \r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\nexport default SortingVisualizer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}